/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.99
 * Generated at: 2025-02-21 15:29:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Systeme_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"fr\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, shrink-to-fit=no\">\r\n");
      out.write("    <title>Gestion des Rendez-vous</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\">\r\n");
      out.write("    <!-- FontAwesome for Icons -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css\">\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            background-color: #f8f9fa;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .hidden {\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- Navbar -->\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"#\">Gestion RDV</a>\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("            <ul class=\"navbar-nav\">\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link active\" id=\"accueilLink\" href=\"#\">Accueil</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" id=\"mesRDVLink\" href=\"#\">Mes Rendez-vous</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" id=\"mesRDVMedecinLink\" href=\"#\">Rendez-vous Médecin</a>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<!-- Main Content -->\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-6 mx-auto\">\r\n");
      out.write("            <h3 class=\"text-center mt-3\">Prendre un Rendez-vous</h3>\r\n");
      out.write("\r\n");
      out.write("            <!-- Appointment Form (Patient) -->\r\n");
      out.write("            <form id=\"appointmentForm\">\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"username\" class=\"form-label\">Nom d'utilisateur:</label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"username\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"email\" class=\"form-label\">Email:</label>\r\n");
      out.write("                    <input type=\"email\" class=\"form-control\" id=\"email\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"telephone\" class=\"form-label\">Téléphone:</label>\r\n");
      out.write("                    <input type=\"tel\" class=\"form-control\" id=\"telephone\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"date\" class=\"form-label\">Date:</label>\r\n");
      out.write("                    <input type=\"date\" class=\"form-control\" id=\"date\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"heure\" class=\"form-label\">Heure:</label>\r\n");
      out.write("                    <input type=\"time\" class=\"form-control\" id=\"heure\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"motif\" class=\"form-label\">Motif:</label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"motif\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary w-100\">\r\n");
      out.write("                    <i class=\"fas fa-calendar-check\"></i> Prendre Rendez-vous\r\n");
      out.write("                </button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Patient's Appointment List (Hidden Initially) -->\r\n");
      out.write("    <div class=\"row mt-4 hidden\" id=\"appointmentListContainer\">\r\n");
      out.write("        <div class=\"col-md-8 mx-auto\">\r\n");
      out.write("            <h3 class=\"text-center\">Mes Rendez-vous</h3>\r\n");
      out.write("            <ul class=\"list-group\" id=\"appointmentList\">\r\n");
      out.write("                <!-- Appointments will be added here dynamically -->\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Doctor's Appointment List (Hidden Initially) -->\r\n");
      out.write("    <div class=\"row mt-4 hidden\" id=\"doctorAppointmentListContainer\">\r\n");
      out.write("        <div class=\"col-md-8 mx-auto\">\r\n");
      out.write("            <h3 class=\"text-center\">Rendez-vous à venir</h3>\r\n");
      out.write("            <ul class=\"list-group\" id=\"doctorAppointmentList\">\r\n");
      out.write("                <!-- Doctor's Appointments will be added here dynamically -->\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap JS Bundle (Includes Popper.js) -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- JavaScript for Handling Appointments -->\r\n");
      out.write("<script>\r\n");
      out.write("    document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("        const appointmentForm = document.getElementById(\"appointmentForm\");\r\n");
      out.write("        const appointmentListContainer = document.getElementById(\"appointmentListContainer\");\r\n");
      out.write("        const appointmentList = document.getElementById(\"appointmentList\");\r\n");
      out.write("        const doctorAppointmentListContainer = document.getElementById(\"doctorAppointmentListContainer\");\r\n");
      out.write("        const doctorAppointmentList = document.getElementById(\"doctorAppointmentList\");\r\n");
      out.write("\r\n");
      out.write("        // Handle Patient's Appointment Submission\r\n");
      out.write("        appointmentForm.addEventListener(\"submit\", function (event) {\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("\r\n");
      out.write("            // Get input values\r\n");
      out.write("            const username = document.getElementById(\"username\").value;\r\n");
      out.write("            const email = document.getElementById(\"email\").value;\r\n");
      out.write("            const telephone = document.getElementById(\"telephone\").value;\r\n");
      out.write("            const date = document.getElementById(\"date\").value;\r\n");
      out.write("            const heure = document.getElementById(\"heure\").value;\r\n");
      out.write("            const motif = document.getElementById(\"motif\").value;\r\n");
      out.write("\r\n");
      out.write("            if (username && email && telephone && date && heure && motif) {\r\n");
      out.write("                // Create new appointment item for Patient\r\n");
      out.write("                const listItem = document.createElement(\"li\");\r\n");
      out.write("                listItem.className = \"list-group-item d-flex justify-content-between align-items-center\";\r\n");
      out.write("                listItem.innerHTML = `\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${heure}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong>\r\n");
      out.write("                            <p class=\"mb-0\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${motif}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("                            <small>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${telephone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</small>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button class=\"btn btn-danger btn-sm delete-btn\"><i class=\"fas fa-trash-alt\"></i></button>\r\n");
      out.write("                    `;\r\n");
      out.write("\r\n");
      out.write("                // Add event listener to delete button (Patient)\r\n");
      out.write("                listItem.querySelector(\".delete-btn\").addEventListener(\"click\", function () {\r\n");
      out.write("                    listItem.remove();\r\n");
      out.write("                    if (appointmentList.children.length === 0) {\r\n");
      out.write("                        appointmentListContainer.classList.add(\"hidden\");\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                // Append appointment to the list\r\n");
      out.write("                appointmentList.appendChild(listItem);\r\n");
      out.write("\r\n");
      out.write("                // Show appointment list container\r\n");
      out.write("                appointmentListContainer.classList.remove(\"hidden\");\r\n");
      out.write("\r\n");
      out.write("                // Clear form\r\n");
      out.write("                appointmentForm.reset();\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Simulating doctor's upcoming appointments (This can be dynamic)\r\n");
      out.write("        const doctorAppointments = [\r\n");
      out.write("            { date: '2025-02-22', heure: '09:00', motif: 'Consultation générale' },\r\n");
      out.write("            { date: '2025-02-23', heure: '10:00', motif: 'Examen de suivi' },\r\n");
      out.write("        ];\r\n");
      out.write("\r\n");
      out.write("        doctorAppointments.forEach(function (appointment) {\r\n");
      out.write("            const listItem = document.createElement(\"li\");\r\n");
      out.write("            listItem.className = \"list-group-item d-flex justify-content-between align-items-center\";\r\n");
      out.write("            listItem.innerHTML = `\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appointment.date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appointment.heure}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong>\r\n");
      out.write("                        <p class=\"mb-0\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${appointment.motif}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <button class=\"btn btn-warning btn-sm reschedule-btn\"><i class=\"fas fa-calendar-edit\"></i> Reporter</button>\r\n");
      out.write("                    <button class=\"btn btn-danger btn-sm cancel-btn\"><i class=\"fas fa-trash-alt\"></i> Annuler</button>\r\n");
      out.write("                `;\r\n");
      out.write("\r\n");
      out.write("            // Add event listener to reschedule and cancel buttons for doctor\r\n");
      out.write("            listItem.querySelector(\".reschedule-btn\").addEventListener(\"click\", function () {\r\n");
      out.write("                alert(\"Rendez-vous reporté !\");\r\n");
      out.write("            });\r\n");
      out.write("            listItem.querySelector(\".cancel-btn\").addEventListener(\"click\", function () {\r\n");
      out.write("                listItem.remove();\r\n");
      out.write("                if (doctorAppointmentList.children.length === 0) {\r\n");
      out.write("                    doctorAppointmentListContainer.classList.add(\"hidden\");\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            doctorAppointmentList.appendChild(listItem);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Show doctor's appointment list\r\n");
      out.write("        doctorAppointmentListContainer.classList.remove(\"hidden\");\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
